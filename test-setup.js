import { generateImageWithFlux } from './lib/replicate-client.js';
import { generateVideoWithVeo3 } from './lib/veo-client.js';
import { generateFileName, enhancePromptForVideo } from './lib/utils.js';

async function testBasicSetup() {
  console.log('üß™ TESTING BASIC SETUP...\n');
  
  // Test 1: Verificar variables de entorno
  console.log('1Ô∏è‚É£ Testing environment variables:');
  console.log('REPLICATE_API_TOKEN:', process.env.REPLICATE_API_TOKEN ? '‚úÖ Set' : '‚ùå Missing');
  console.log('FAL_KEY:', process.env.FAL_KEY ? '‚úÖ Set' : '‚ùå Missing');
  
  // Test 2: Verificar funciones utilitarias
  console.log('\n2Ô∏è‚É£ Testing utility functions:');
  const testFileName = generateFileName('test', 'png');
  console.log('Generate filename:', testFileName);
  
  const enhancedPrompt = enhancePromptForVideo('A cat sitting', 'cinematic');
  console.log('Enhanced prompt:', enhancedPrompt);
  
  // Test 3: Test b√°sico de conexi√≥n Replicate (sin generar imagen real)
  console.log('\n3Ô∏è‚É£ Testing Replicate connection:');
  try {
    // Solo verificamos que la funci√≥n se pueda llamar
    console.log('Replicate client function:', typeof generateImageWithFlux === 'function' ? '‚úÖ Ready' : '‚ùå Error');
  } catch (error) {
    console.log('‚ùå Replicate setup error:', error.message);
  }
  
  // Test 4: Test b√°sico de conexi√≥n Veo3
  console.log('\n4Ô∏è‚É£ Testing Veo3 connection:');
  try {
    console.log('Veo3 client function:', typeof generateVideoWithVeo3 === 'function' ? '‚úÖ Ready' : '‚ùå Error');
  } catch (error) {
    console.log('‚ùå Veo3 setup error:', error.message);
  }
  
  console.log('\n‚úÖ Basic setup test completed!');
}

// Ejecutar test
testBasicSetup().catch(console.error); 